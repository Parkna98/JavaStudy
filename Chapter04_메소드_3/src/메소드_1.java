/*
 * 		변수 / 연산자 / 제어문
 * 			-------------- 명령문
 * 		=> 묶어서 사용
 * 		변수 : 배열 / 클래스**
 * 		명령문 : 관련된 명령
 * 				=> 입력 / 출력 / 요청 ==> 메소드
 * 				=> 동작 => 조립해서 사용 (객체지향프로그램)
 * 						 ========== 수정/추가 (유지보수) 
 * 		메소드는 한개의 기능만 수행이 가능하게 만든다
 * 		=> 자바는 클래스 영역을 벗어날 수 없다 (클래스 종속)
 * 		1. 메소드 구성요소 
 * 			= 리턴형		: 사용자 요청에 대한 처리 결과값
 * 						  **결과값은 반드시 한개만 사용이 가능하다
 * 									   --------
 * 										여러개인 경우 => 배열/클래스/컬렉션
 * 						  => 예측해서 설정 (정답은 없으나 프로그램에 맞게끔 설정)
 * 
 * 			= 매개변수		: 사용자가 요청한 값
 * 						  웹에서 마우스클릭, 키입력, 입력창...
 * 							   -------		 -----
 * 						=> 메소드는 사용자가 행위를 한 경우 => 메소드 호출
 * 								 ---------- : 마우스, 키보드
 * 									
 * 			= 메소드명		: 식별자 (변수) 
 * 						  관례상 소문자로 시작
 * 
 * 			= return문장	: 처리결과값 보내줌, 메소드의 종료
 * 			  --------- 항상 맨 마지막에 사용하는것은 아님, 중간에서 사용가능(조건문안에넣는등)
 * 			  메소드() {
 * 				if() return;
 * 				else return;
 * 			  }
 * 
 * 		2. 메소드 형식	
 * 		   [접근지정어][옵션] 리턴형 메소드명(매개변수) ==========> 선언부
 * 			{
 * 				구현부
 * 				--- 변수선언
 * 				--- 연산자
 * 				--- 제어문
 * 				-------------------- 결과값 도출 : 파이썬(예측) => AI
 * 				return 결과값;
 * 				=> 자체 처리 => void => return을 생략할 수 있다
 * 									 ------------
 * 										   ㅣ 모든 메소드는 return을 필요로 한다
 * 										   ㅣ 컴파일러가 자동 추가 (자동추가: return, import java.lang.*)
 * 																					---------String,Math,System,Thread...
 * 			}
 * 
 * 		   [접근지정어]--------------------------------
 * 		   public : 모든 클래스에서 사용가능
 * 		   private : 자신의 클래스에서만 사용가능 => 은닉화 
 * 		   protected : 상속받는 클래스, 같은 폴더안에서	
 * 		   default : 같은 폴더 안에서만
 * 		   -----------------------------------------
 * 		   [옵션]------------------------------------
 * 		   static : 자동 메모리 저장 ==> new (주로 new를 많이 씀)
 * 		   abstract : 추상 메소드 ==> 선언 (설계=>요구사항) => 유스케이스 다이어그램
 * 	       final : 수정이 불가능 => String,Math
 * 
 * 		   리턴형으로 사용 => 기본형 (int,long,byte,char,double,boolean)
 * 			(1개만사용)  => 참조형 : 배열 / 클래스
 * 					      = String, int[]
 * 					  => 메소드 매개변수 전송법
 * 						 ----------------
 * 						*** Call By Value / Call By Reference ***
 * 								(값 전송)			(주소 전송)
 * 
 * 		   매개변수로 사용(0개이상) => 기본형 : Call By Value
 * 								참조형 : Call By Reference
 * 					=> **매개변수가 3개이상 : 배열, 클래스
 * 		   
 * 		3. 
 */
public class 메소드_1 extends Object{

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
	}

}
