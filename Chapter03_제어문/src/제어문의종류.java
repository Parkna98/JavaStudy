// 54page
/*
 * 		변수 => 저장(데이터)
 * 		연산자 => 결과값, 사용처, 형식
 * 		제어문 => 흐름(동작), 사용처, 형식         **면접Q. 라이브러리와 프레임워크의 차이점, 대부분포트폴리오 내용질문
 *		1. 제어문의 종류 : 	
 *			*** 제어문은 무조건 1개의 문장만 수행할 수 있다
 *				if(조건문)
 *					문장1 ====> 제어
 *					문장2 ====> 일반문장
 *					
 *				if(조건문)
 *					{
 *						문장1
 *						문장2
 *					}
 *			= 조건문 	
 *				= 단일 조건문
 *					형식) 
 *						if(조건문) => 조건문 (비교연산자, 논리연산자, 부정연산자) 
 *						{
 *							조건문이 true일 경우에만 수행
 *						}
 *						=> 명령문을 제어한다(수행x,수행O)
 *						=> 단점 : 속도가 느리다 (단일조건문 여러개 사용시)
 *						=> 1개가 독립문장이기 때문에 
 *						=> 중복이 있는 경우에는 사용이 가능
 *							= 1~100까지 중에 3,5,7의 배수
 *						 
 *				= 선택 조건문 : true와 false를 나눠서 작업
 *					==> 삼항연산자
 *					if(조건문)
 *						{
 *							조건문이 true일때
 *						} 
 *					else				
 *						{
 *							조건문이 false일때
 *						}
 *					end;
 *
 *				= 다중 조건문 : 한번만 수행할 때 주로 사용
 *					=> 계산기 : +, -, *, /
 *					if(조건문)
 *						{
 *							조건문이 true면 수행 ==> 종료
 *							false ↘
 *									밑에있는 조건문으로 이동
 *						} 
 *					else if(조건문)				
 *						{
 *							조건문이 true면 수행 ==> 종료
 *							false ↘
 *									밑에있는 조건문으로 이동 
 *						}
 *					else if(조건문)				
 *						{
 *							조건문이 true면 수행 ==> 종료
 *							false ↘
 *									밑에있는 조건문으로 이동
 *						}
 *					else // 생략가능
 *						{
 *							해당 조건이 없는 경우 처리하는 문장 
 *						}
 *
 *					ex) 
 *					int score=80;
 *					if(score>=90);
 *						A
 *					if(score>=80);
 *						B
 *					if(score>=70);
 *						C
 *					if(score>=60);
 *						D
 *					if(score<60);
 *						F
 *					=> 80점인경우 학점? 결과 => D // 결과 원하는대로 안나옴 // 이런경우 B를 받고 빠질수 있게 다중조건문(else if)를 써야함
 *
 *					int a=15;
 *					if(a%3==0)
 *					else if(a%5==0)
 *					else if(a%7==0)
 *					=> 배수찾을때 위의 경우, 15가 첫조건에 빠져서 5의 배수는 아니게 된다. => 이런경우는 중복이있기때문에 단일 조건문(if,if,if)를 써야함
 *
 *			= 선택문
 *
 *				=
 *				=
 *				=
 *			= 반복문
 *
 *			= 반복제어문
 * 
 * 
 * 
 */
// 단일 조건문 : 조건식 (비교연산자, 논리연산자, 부정연산자)
// 1. 정수 한개를 입력받아서 짝수/홀수
import java.util.Scanner;
public class 제어문의종류 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		// Scanner는 클래스 => 키보드로 입력해서 저장 => 엔터 메모리에 저장
		/*
		 * 		기능 (메소드)
		 * 		정수 : nextInt()
		 * 		문자열 : next()
		 * 		실수 : nextDouble()
		 * 		논리 : nextBoolean()
		 * 		문자는 X ==> System.in => 문자도 정수로 받음,문자를 받으려면 문자열을 받아서 짤라서 써야함
		 * 		웹/윈도우 (char(X))   
		 */
		// Scanner클래스 저장 => 클래스를 저장 (new)
		// 동적바인딩 
		Scanner scan=new Scanner(System.in);
		// System.in / System.out => 자바 표준입출력
		System.out.print("정수 입력:");
		int num=scan.nextInt();
		// 가공 
		if(num%2==0)
		{
			System.out.println(num+"는(은) 짝수입니다");
		}
		if(num%2!=0) // num%2==1, !(num%2==0) 표현방식은 매우 다양함
		{
			System.out.println(num+"는(은) 홀수입니다");
		} 
//		else
//		{
//			System.out.println(num+"는(은) 홀수입니다"); 
//		}
	}

}
