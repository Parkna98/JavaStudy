/* 	
 * 		** 변수는 1개만 저장하는 공간
 * 		   ---- 많은 경우에 변수를 제어하기 어렵다
 * 		   ---- 보완 : 한개의 이름으로 여러개의 변수를 제어
 * 		   			  -------- 배열명 ==> 인덱스번호로 제어
 * 		1. 배열 : 여러개의 변수를 하나로 묶어서 관리하는 역할
 * 				 1차원 배열 / 2차원 배열.... 다차원배열, 가변배열
 * 				 -------- 웹에서는 1차원만 사용
 * 		   장점 : 한개의 변수명으로 모아서 관리하기 때문에 반복문 사용이 쉽다
 * 				 연속적인 메모리 구조 => 인덱스번호를 이용한다
 * 		   단점 : 고정적이다 => 한번 메모리 할당을 하면 변경하기 어렵다
 * 				=> 기존의 배열보다 크게 배열을 만들어서 처리
 * 				=> 보완 : 컬렉션 (가변형) *****
 * 						-----
 * 						웹) 1. 기본문법 
 * 						    2. 클래스 설계
 * 							3. 데이터베이스 연동
 * 							4. Front
 * 				=> 단점 : 같은 데이터형만 모아서 관리 => 다른 데이터형도 묶고싶다면? 클래스!
 * 			
 * 			배열)
 * 				1. 선언
 * 					데이터형[] 배열명;
 * 					데이터형 배열명[]; 
 * 				2. 초기값
 * 					= 생성과 동시에 초기화
 * 						int[] arr={1,2,3,4,5}
 * 								  ----------- 배열갯수 5개 생성
 * 					= 자동 초기화 
 * 						int[] arr=new int[5]; 
 * 						---------------------
 * 							int => 0
 * 							double => 0.0
 * 							float => 0.0f
 * 							long => 0L
 * 							boolean => false
 * 							char => '\u0000' => null문자
 * 									'\0' ==> 정수 0이 아니고 그냥 문자가 없다는 뜻임
 * 							String => null
 * 									  ---- 주소가 없는 경우
 * 									  NullPointerException ==> 주소값이 없다 : 초기화를 안한 경우 많이 보이는 오류
 * 					메모리 주소
 * 					int[] arr={1,2,3,4,5};
 * 					---------
 * 					
 * 					stack(주소)     ㅣ    heap => 실제 데이터가 저장되는 위치 
 * 					 		
 * 					arr					arr[0], arr[1], arr[2], ...
 * 					----
 * 						
 * 					----
 * 
 * 				3. 활용
 * 					
 * 
 */
public class 배열_1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
