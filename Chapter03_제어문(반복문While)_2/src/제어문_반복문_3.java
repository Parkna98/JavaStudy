/*
 * 		변수 => 데이터형, 식별자 (암기)
 * 			=> 한 개의 데이터를 저장하는 메모리 공간
 * 				(저장된 영역은 변경해서 다시 저장이 가능)
 * 			=> 변수 기능 (읽기(값 가지고 온다)/쓰기(메모리에 저장,수정)
 * 			=> 변수를 저장하기 위해서는 먼저 메모리 크기를 결정
 * 									-------------
 * 										기본형(데이터형)
 * 										참조형(사용자정의) : 배열, 클래스
 * 			=> 기본형
 * 			   정수
 * 				byte(1byte)
 * 				int(4byte)
 * 				long(8byte)
 * 				---------------------구분 L(l)
 * 				100L (문자아니고 long형이다!)
 * 				=> 컴퓨터가 인식하는 모든 숫자 int
 * 			   실수
 * 				double(8byte) => 15자리
 * 			   문자
 * 				char(2byte) => 0~65535
 * 				----------- ASC vs Unicode (******) 차이점 꼭알기! 아스키: 제한적
 * 																유니: 전세계모든언어 출력가능
 * 			   논리
 * 				boolean(1byte) => true/false만 저장이가능
 * 				----------------------------------------------------------------------
 * 				변수 활용 (프로그램=>데이터관리)
 * 				변수
 * 					state={				data:{
 * 						name	vue.js		name
 * 						sex..  =====>		sex
 * 					}
 * 				변수 활용방법 => 연산자, 제어문
 * 				연산자 
 * 					= 단항연산자 (++,--,!,(데이터형))
 * 					= 이항연산자
 * 						=산술(+,-,*,/,%)
 * 						=비교(==,!=,<,>,<=,>=)
 * 						=논리(&&,||)
 * 						=대입(=,+=,-=)
 * 					= 삼항연산자
 * 						(조건)?값:값
 * 					==> 자동형변환, 강제형변환
 * 					==> +는 문자열 결합
 * 					------------------------------
 * 					프로그램 흐름 제어
 * 					=> 오류가 발생시 건너뛴다 => if
 * 					=> 반복수행 => for, while
 * 					=> 원하는 포르그램 수행 => if, switch
 * 					=> 제어문
 * 						= 조건문
 * 							=단일
 * 								if(조건문) => 조건문은 반드시 => 비교연산자,부정연산자, 논리연자
 * 
 * 								{
 *									true일때 실행 								
 * 								}
 * 							=선택
 * 
 * 							=다중 => 여러개의 조건문 중에 한개 수령이 가능
 * 								(if
 * 						= 선택문
 * 							switch(정수, 문자, 문자열)
 * 							case
 * 						= ***반복믄
 * 							for
 * 								for(초기값;조건식;증감식)
 * 								{
 * 									반복수행무장 3
 * 								}
 * 							while
 * 								조건문
 * 
 * 	
 * 				
 * 						
 * 
 * 	// 코테의 기본 : 맨처음에 오류체크 먼저하고 들어가기
 * 	// 프로그래밍 언어 => 저급: c/c++ => 하드웨어 제어
 * 					  고급: 포틀란, 자바 => 소프트웨어 제어
 * 
 */
public class 제어문_반복문_3 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println(10000000000000L);
	}

}
